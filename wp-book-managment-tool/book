	//add acction hook for CPT in class-plugin-name.php file
  private function define_admin_hooks() {

		$plugin_admin = new Wp_Book_Admin( $this->get_plugin_name(), $this->get_version() );

		$this->loader->add_action( 'admin_enqueue_scripts', $plugin_admin, 'enqueue_styles' );
		
		$this->loader->add_action( 'admin_enqueue_scripts', $plugin_admin, 'enqueue_scripts' );
		
		//action hook for custom post type

		$this->loader->add_action( 'init', $plugin_admin, 'custom_post' );

	}
	
	
	//creat CPT method and register_post_type in class-plugin-name-admin.php file
	
	//creat custom post type method
	public function custom_post(){
	
			$labels = array(
				'name'                  => _x( 'Book', 'Post type general name', $this->plugin_name ),
				'singular_name'         => _x( 'Book', 'Post type singular name', $this->plugin_name ),
				'menu_name'             => _x( 'Books', 'Admin Menu text', $this->plugin_name ),
				'name_admin_bar'        => _x( 'Book', 'Add New on Toolbar', $this->plugin_name ),
				'add_new'               => __( 'Add New Book', $this->plugin_name ),
				'add_new_item'          => __( 'Add New Book', $this->plugin_name ),
				'new_item'              => __( 'New Book', $this->plugin_name ),
				'edit_item'             => __( 'Edit Book', $this->plugin_name ),
				'view_item'             => __( 'View Book', $this->plugin_name ),
				'all_items'             => __( 'All Books', $this->plugin_name ),
				'search_items'          => __( 'Search Books', $this->plugin_name ),
				'parent_item_colon'     => __( 'Parent Books:', $this->plugin_name ),
				'not_found'             => __( 'No books found.', $this->plugin_name ),
				'not_found_in_trash'    => __( 'No books found in Trash.', $this->plugin_name ),
				'featured_image'        => _x( 'Book Cover Image', 'Overrides the “Featured Image” phrase for this post type. Added in 4.3', $this->plugin_name ),
				'set_featured_image'    => _x( 'Set cover image', 'Overrides the “Set featured image” phrase for this post type. Added in 4.3', $this->plugin_name ),
				'remove_featured_image' => _x( 'Remove cover image', 'Overrides the “Remove featured image” phrase for this post type. Added in 4.3', $this->plugin_name ),
				'use_featured_image'    => _x( 'Use as cover image', 'Overrides the “Use as featured image” phrase for this post type. Added in 4.3', $this->plugin_name ),
				'archives'              => _x( 'Book archives', 'The post type archive label used in nav menus. Default “Post Archives”. Added in 4.4', $this->plugin_name ),
				'insert_into_item'      => _x( 'Insert into book', 'Overrides the “Insert into post”/”Insert into page” phrase (used when inserting media into a post). Added in 4.4', $this->plugin_name ),
				'uploaded_to_this_item' => _x( 'Uploaded to this book', 'Overrides the “Uploaded to this post”/”Uploaded to this page” phrase (used when viewing media attached to a post). Added in 4.4', $this->plugin_name ),
				'filter_items_list'     => _x( 'Filter books list', 'Screen reader text for the filter links heading on the post type listing screen. Default “Filter posts list”/”Filter pages list”. Added in 4.4', $this->plugin_name ),
				'items_list_navigation' => _x( 'Books list navigation', 'Screen reader text for the pagination heading on the post type listing screen. Default “Posts list navigation”/”Pages list navigation”. Added in 4.4', $this->plugin_name ),
				'items_list'            => _x( 'Books list', 'Screen reader text for the items list heading on the post type listing screen. Default “Posts list”/”Pages list”. Added in 4.4', $this->plugin_name ),
			);
		 
			$args = array(
				'labels'             => $labels,
				'public'             => true,
				'publicly_queryable' => true,
				'show_ui'            => true,
				'show_in_menu'       => true,
				'query_var'          => true,
				'rewrite'            => array( 'slug' => 'book' ),
				'capability_type'    => 'post',
				'has_archive'        => true,
				'hierarchical'       => false,
				'menu_position'      => null,
				'supports'           => array( 'title', 'editor', 'author', 'thumbnail', 'excerpt', 'comments' ),
			);
		 
			register_post_type( 'book', $args );
	}
